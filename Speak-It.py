import datetime
import os
import pyttsx3
import socket
import speech_recognition as srr
import sys
import threading
import time
import win32com.client as wincl
import winspeech

from comtypes.client import CreateObject
from comtypes.gen import SpeechLib
from tkinter import *
from tkinter import PhotoImage
from tkinter import filedialog
from tkinter import messagebox

global data
global speak
global count
global rate
count=0
rate=1
winspeech.initialize_recognizer(winspeech.INPROC_RECOGNIZER)



engine = pyttsx3.init()


top = Tk()
top.title("SpeakIt")

top.sresults=1

dtastext='''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'''
imagePath3 = PhotoImage(data=dtastext)
widgetf3 = Label(top,  image=imagePath3,  bg="#006666")
widgetf3.place(x=50,y=20)

onbtt='''R0lGODlhHAAcAHAAACH5BAEAALgALAAAAAAcABwAhwAAAFWqVVGiaC65WB3FSxzDSxzGSxzFTBvGTDiuWVmZZgD/AFSpZynHVQ7QRA3PRA7QRQ7RRQ/PRDTHXlmZcmaZZiO/URLPRw3RRA/PRQ3PRQ7PRA3QRRDPRke3Z1+ffx3MTRHQRxHMRxbIRzysWn9/f06TazG2VhHNRg/QRDjOYx7MTg/QRhDORhbJSUulWiTEUTO/XDe2WC26UziyWxDQRUSuY1WUahLMRQ7PRRjHSVV/fzSzViy4VSu7Uym8Uiu8VEOpYCm/UhHMRW2RbS22URLLR1SbcRe9Rx/BTFyLcwD//w7ORA7RRDSvVw/ORTWxWFujbRzCShXLSTmsWhDMRhDNRybHUibCUw/ORGKcdVqUah3DTRPOSH+ffxjJSFKcalmZbDKvV2mWeGiWcy+0VQ3QRFObaVuXbWuTeGSRbT6nXVOcZlybajGwVm+Pb2WYcFuabSLBTRHORmKJdSzCVVegZVSNcSHFUBrGSxfMShTLSEOlYR3CTBLMR0+fbz+lWRLORj+tYg/QRRTJRxy9Sl2haxHPSDC6VA/NRS67V0aiYzK1VzG2VzG3VjW2WTywWxjKSRDORTy0YRDPRTi2WRLNRg/PRji3WyfBUhDQRii+UnWJdVChaxnJSR3KT////yTEUi+/WU+fZ0WpXBvASBLNRx7OTz62YBLQRw3ORCbCT2ObcT3EYCvKV0+nYGqUakGrYCa+USPATyLAUCO/TiO/Tyu8UgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjYAHEJHEiwoMGDCBMqXCgQCYghIBgmxKBqiMWLFiUOHKJKFQaOHSuqapKR4RCKQxBy/LiQZMqFHjEkbMJS4skmBy8eRGTh4MeXBDkCFYixJEGKBXUSHEkTw8+hTSoulTqQaZOmP4NyXAp1yNWvTTseVRWU7EanYLGaJboWF1WBTjGkvYp0YF22U+fSHSq2aluveqO29Rj0rlu0af8aFdi3qtyvKAsPdfuW8UmRSQkX7Dh5odPOuJSa3IrQpUnNCb0u1lp55ueQnEfW1NgxLmzQGi3o7qmxt8KAADs='''
imagePath4 = PhotoImage(data=onbtt)
widgetf4 = Label(top,  image=imagePath4,  bg="#006666")
widgetf4.place(x=560,y=480)

offbtt='''R0lGODlhHAAcAHAAACH5BAEAAMEALAAAAAAcABwAhwAAAKpVVa1RUcw5QdwpMNsoL90nL90nLt0oL75ARKVZWf8AALNeXtw1OescJOobJOocJOwcJOscI+scJdxARJlmZtQuNekgKOwcI+kcJOocI+sbI+oeJsdPU59ff+QnL+ofJucfJuIlKrtDS59fX39/f5xYWMY7QuceJ+sdJeRDS+QqMOkeJeMjKrRLS9cvOOobI9I8QsdCQuoeJ+oeJc01PMFCR+geJeodJcBKUJRVauUeJuMkK8o5P802O881O9E0Os42O7VJT9U0OOcdJZFtbcg2O+QgJ6ljY9UlK9gqMItzc8E9QekdJcM7QaNbbdgoMOYhKb1BSuUeJ9sxN9gxOukeJuodJJxiYtwoMOcgKJ9/f+EkKqRaWp9fZsA+QpZpaZZoaMk6P6ZYXqNhYZNra+wbI5pkbbpKSqZYXaJjY8E5QY9vb5hlZcFCRppkZNYtNekgJ+keJ5x1ddg0PKdXXo1xcesdJN0rMusbJN4oMOUjK+geJKlUY+QhKaxLS9kpL+YhJ69fX7JGTOgfJ79LS+EhKNMnLukdI65dXekfJ+kbI8o4PNA5P7FNVMk7Qck6QMY9Q8JCSOMkLuceJqJcXMNLS8ZARMk5QOcgJ+seJcZCR9cyOeocJdIyN4l1deAmLekdJuofJ+EpMf///9oxN9U8P6dXV6lUcapqarlNTdUnLekcJeodJuUrM8pITOkhKegcJOkcI+kgJtgxNdhESeE3Pq9PV5RqarhKT9MwN9ctNNcuNNQuNNcuNc82Oq5QXQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjMAIMJHEiwoMGDCBMqXCjQgAFDBhgmNEORoiYzF81IHKgpY8WPFiV27Igwo6aFsEgurJjw4kmRZgwdzHjQk6eDIQsuilnQI0WDPwkaCjpwZ0WPBFkOpLgoKcanHwlqWvRSINFgPi1GXaqRq1OXIK+K7Wo1LFiywTA6dfo0K1qVZaWGhVo1bd2cVsF6bDowZd20aAF/nFrXZU+eSanu5MuV8cChgVeqNThyI16gVxFi/EtZKeWOkQ8aWgxyJOKNi4wOlrnRoKdDr1vLThgQADs='''
imagePath5 = PhotoImage(data=offbtt)
widgetf5 = Label(top,  image=imagePath5,  bg="#006666")
widgetf5.place(x=560,y=480)


dats='''iVBORw0KGgoAAAANSUhEUgAAAIwAAACMCAYAAACuwEE+AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAADfRSURBVHhe7X13dFzXfeZveu8Ng14JkAKr2ERSJCXRkijbSqxEsS2v17Gd+MTxZvdEiWOf/BFHSfacHG+azm6K4xPXyHYky5YsihIjqoC9AyBIkABRiN4HA8wMpgP7++7MADMgGiWCmmH06TwN+ObNmzf3fvf7ldsol/FHf/RHui996c8+19XVdzgUCo/87GeH//ZP/uSvC5Nv3xX88Ie/eOrkyYbW/v7Rvh/84NW/+sIX/pc5+dY9CWnyNefwrW99S+r36x0f//iDB8xm406ZVGo26HVbnE6bK3nJXUFhoZvsdrPEbjcaN2+u2TYd0ex6+umnZcm37znkLGH8fr9GLlft27lz431arVpDEomUiWO12Szq5CV3BTabnowGHclkMp3b7ax94sn9eyyWcn3y7XsOOUkYqIta7bb+2pP795rN+jVSqVQlkRBpdRqJTqflv+4eTCYz6fUa8bfVajTt3r1hq0Fr38PPKBcn7zHkJGGmeqZ0U1PT+zZtrqlVqZRqJoyEQWyOyOGwJK+6O2DCkkarZoGTED+G1mYzr/+tzz62T612GZKX3FPIOcJAXbRFBZb9+7c+rNNpqriiFLFYTLznsJnI7b57hPnOd76jiEanFSBsPB6n6elpiVqtMpaVFW6OR6S7vvKV7yiSl94zyDnCeNo8ep8v9uD27evXKhRybSgYkXbd7KdQKEIyhUwSjc7ctUqampKV9/YOrZ+ZmVGNjU3QTX4O/ltjMGhrDz6xZ//atUpd8tJ7BrlGGElxTbVlz66Nj5hM+upIJKI4deoSXbhwlQKBKVFZbW19W5599lv25PWriuLi4kqNRvUg/+nsaO+mNw7Xkc8XkDCRjSWsMoFAdMe95svkFGG++tVvmkOk3LX7wS3rEJV4vT7p4cPHqKmphULBMJzdArlcvt9strsTn1hduN0OMzvZ7mg0phge9khOnayn06caKB6fVrPK3PepTx3Yb7VWapOX3xPIJcJI9u7dbn3iiQcfM5sN1eFwRP7eu+fo+rV26ukeoEg0CsIolXJFkVarvCsOZ16eRarX6xSRSJT8vgB1dfXRkTeP09DQqFQmk5rdbvv90hkZVEaZ/EjOI2cI841v/LVxfDy2raqqaB07uroJVpe6987RxISffYkgWrW4zmQxyK1W611JnNlsFjIYNATCTAVD/Bqj1tYuOlZ3gVh1lDqdunb/w/c/kp+fn4i77wHkDGE2baq2PLBj/QGNRl0RDIZkJ0/VUzeUhSsLpAmHwuI6p9MKUyH+Xm0oFAoJm0ZB2PHxSXHO4/HSe0xkdsQRPJkLC91bfD7t1ntFZXKCMF/5yjdM4+Ph+yvXFNVy6GocGBiRHn3rFE1O+uHoUjAYpsGhMdHCQZj8/NUPrb/xjb8v7eocLOY/5YFAkEZHPeJ8LBanzo4ewvOFw1GlVqe+b9euDQdcrjX3RMSUE4TZs2eLY/PG6gNqlaqcoyHpuXNNXCm9Ql0A5EB6egaZOCFSq5Wk169+Zr6sLP++UCS8i/80M2Ek7PQK8gIcKdHpMw10s7NXxubTWl1dvDUel278gz94XiUuyGFkPWH+8A+/ZVXKjJvX1VZuicXjFnZwWV1OijA6henpGTYBfeIc24Hk2dWFy2FzM4ErmRB6OLzDQwmFAeBPdXf105EjJ4QvYzDo1m3dsvbgtm0WU/KSnEXWE2b79o2u4hL3Aa1WUzY25pW+ffQ0dbC6cEUkryBu2dPU1zcE0yThVq7sbBuuYJ9hVWXGZjMr1RqF6OhE0nBiwifOpwAzee7sZWpr60IZ29bUlG2Lx83rc92XyWrCfPWr37TodOZ1VdXFm9j8WFnipXV152cd3BRmWGF87M/ARDFhbOFYdI9M5ihJvr0qcOZZSKfTCeJyiM+vCfOYAszTwMAoIfRnQimMRl3Vhg0VB0pL77MmL8lJZDVhqqsrC1Qq1SMWi7FkctInOXOmkeArwASlY5orZ3IyQNGIyMWYjQb9RrfbtqqhUn5+HjEJOEIKJZ3v5BtpCIVCdJqjOVY/LucZV1VV6U6z2VKTy31MWUuYZ575psXtzlu3dm35do5+HF1d/ZITxy9yFDJnitKBSvN4JijGLd6VZ9UXFrpWzcH87GeftTOBLQqFXOrz+ZnEY8l3MgFfhiM6qmOVYRMl02pVVS6X/bFt66Q5qzJZS5jycnepXmt8uKDAWeTxeCXnzzWJSGS+uqTA4TYyrCKBhiEOq5mLMRgs63p7h7eww6sFUUdG5hze+UDkduzYBertHZQygVzV1eU7tQ5XVa76MllJmKef/n19bW159Zqaku1sZuyIOJAMS3d0pdLMcVLwGfq5NcPZ5KiErNbVC0iKC13lMpm0lv80+9gUDg+Pi+9PAYO5UoDK9PQM0MkTl0AeqdGoLbeYzI8qFCZb8pKcQlYSpqywqMxkMO8tKcl3j4yOS+rrr0n6+4aFigBsCSjPpiO5bO7xUWEjQ2PCp0BojQzsasFq0euUCrmOFUbi51B+3ONNvsPPJpOQSScng0ZOKd7AKT5x/ILwZfg53Vu2rttT5C6t+MpXvpJzvkzWEYYLUbt7//YqVpcdXLjO3p5ByYkTmb6LQaukPZsKyWrESLfEOTRwdBFEuHL4c9KxYZ9ptZxLV74No+zEN0fCUdE1kIJKKaXyPC2tK9EzaRMPB5Vpb++lY++d52guILPZTGVSpeKATlfsFBfkELKOMNPT9jX8WPuKi935454JydWrbSKrm/JdoC75Dj2tr3KSm19lyUQdFCbAFReNxVBLhsGRsZ1Wq39VQuuSkiKOkAwiwwwfxR+YI4ySn6/EqaENZUbSa+ZULhwO03t156k3oTIFWzav3ZefXwBfJqfGy2QdYfbs2V5WkO9Eyt3BjqLk4oUron8mBT2ry4Y1TjLolGTSq5gwiVYMwoyy85lM3jl1Ws2uwkLnKhEmX4TUfv8UecYnKByKJN8hNpMSMvKz5VnVVOrUsnlMnAfhMQzjwvkmCgSCsqLivDK5VPbwxYsD+YkrcgNZRRj0tezbt9VSXVNq4+hDeu1aBzU13RBkAFK+y+aaPFIr5aRWsZ+Q5mF6vX6RcWUTILXZzFZWqVUZF2OxGEmlUogwHl0CqecD5ExgnVpKerWMNlUaSaOcUxkk904cv8TEHpdqNKqC9RvX7N27d3tB8u2cQFYRxmqVV3s8kxu4MNVojWIkXVpW18iKsqnaRRaDSpDHZlLP+gnA9HRc5ETwGbvDLCkuzl+V3wfVAFFBmMHBkeTZBODD2I1KUiqkVGjXUL5VlaEy7e3d1HytHc8orakpc27YsIajpZm5H5HlyBrCIGJ47LEHavPy7A9wYdqvX+9kc9Q823oREeXbdbRjvZsrRS7CaptJOy9SIhoZ9tAU+xQmk0Gi06kV7CPc0d+ImQKRSEzIBvtYrDBzSTuIHXwYHasLGIBIaUuVmVRMnhTQ74SBX/ycEqfTqpNK5fd//evfvitDSu8EsobZTzzx+5v+9Jtf/u3tO9c/3XWzP/+Ff3+NDh16b5YwZlaVAztK6Yk9Fdx6ZRTjyKOxdZi+/+pl8voSKgQSHTy4l770O78xU1Tk7j90qO7FV15554cHD264KS64AwhMSGv3Przz82Vl+U8deu09x3e+8x80ODCnMoiQvvhYkSALnnx4PEw/eKuHBvk1ZbmMRj395V/9z5ntOzZG29t7Tpw61fCtL3/5qZP8VvKK7EVWEAbqsq7mwWf2P7z9f9TUlGw8cuSk4l/++WezrRcttzjPSL/3m5upwGUUjm4oHKO6S930y3dayRdIOJ0wEw89tIN+76ufobLywig7wJ3sN7RzBWV2JX8AhMNRA3/NGoVCXvzSi28q/vmff0p+39xQi3ybmp7e6046vBKaCsfp3YYROnbFQ6FIIo+EHNFnPnOQPvu5T8xYLKaun/zkze/++MevvvDuu9/r5rezmjR3ZezrQsCEdT4U+/fvV7z9dvemA4/s+ETt+sptXPjmE8cu0nmOJlLqotMo6L5yB+1cXyB8AxAjHI3RheYB6uydEGoD4LyBo5dt2zdgFqRMLpcZVSolVnOowsH3E6+3e/B9Z//me5ZyhVuYjEoM5MIQhnSnV80+TDGH1U6zWhBGys8kY7PZ0uunYDjxnABG6W3evE6Sn+/UeD1eTVt7X1yhKBjds2fdZHNzc9aS5q4RBr7E1772Nem6detkTz31lKKhYXKTVmt7ym4v/M19D259bOv22gcKCpz5DfXX5G8cPpbRP+PiyOiR7aVU4DSIwkf9hCMxOtPUT/0jHBWl9S+BNLt3byGuCPwTvw99Nkqu1Nljeno644jH48pYLDZ74N+p87gen+f7itfkIRsdHaezZxoJeaJ0IKyG01vq0gol5McRfs3IRISPMD9r4jpkpCsqiqi0rFBusZrs7HMVFRQ4yk36fHt1zbbgJz6x38uNSep0fk3y9NPrJHV1dVlBolU1SVzYkj//8z/HdyivNHi2bNy8btt96yvz16wpk6vVqjzJzMxGmULqUioVSjYbmFCv+ulPXqcffP+Xs9ER/JX1lXb64pMbyCwyuxLRoscmgvT8C+fp5sDkbFIPwBDNP/6TL9IDD2wU13LFi+txAKlXIPU3rsFQBIS9OIfPpYC/0w+YE3Q9dHb2069eeZdOnmxIXpkACLOuWE/PPFTAasPOL38mGpumyx2T9OqZQZoIJDLWUJ+HHtpJX/7d36Sy0oIZfyAYCQRC/pmZ6Zv8XjM/xwhmIHR09Ibq61u6Gxpaz37sY6VXuDzjfM8PjTx3nDD8Q5MkcWi1Ws39e3Zt3lRcWuAIBAJlXNCbOWS26vU6OUcwUrlc9MegFYvPXr7cQj954RBhVF0KUJePsbMLh5fNAVcAUSQap9ZuD/3rz+uZOKHklQlAgf77Fz5J+/ZvJf4ucS51/8WAjC0/n8jGLgcQAIS50tROb/3nWbpxoyf5zhwKbCr63MOF5GZ/BiYJ3+/xRemlY/10oz/AJjTxPC6Xnf7461+ivfu2CiICfG2Yj6kI/0i/PwAlmvb5QsPRSKQ+Eo50Nja19p46deViSQmBPNG7TZ47bpK2bt1a8NBDB//bxz++94nKyqKDeW7br5lM+l0Oh7XGZjO7WUmMrAJaLnTM1RHfjxYeiUTo5ImL9N5758XYlhQKXQY6wObIYtSIVgmEInFqujFMze1jgjzpQIWWleZTUXHeLGGWAyoU6gLirAS4vrtrgFqud5EvzeFNQcWqCD/GblKKZ8YzQXn8wRj1jgYpEkvUMQiKjDGeVaeDkyzCbzlfr+HGoeVzWjZVOrvdZHU4LWUGo2FLcZF7865dG8p3PvDA+h//+PV8dvLb33rrrczhfquIO56HcTgK7C6H+VMcRXyR/YhHrFZzqUajdnALwlJechQ2OhKnpqZoYmKCxsbGaHR0lHp7+1l+uzPyGlq1XPQbOaxaoSwpwMntH/ZTNOUQZGBG5Dpi84h0p8HR0uyshfkI8XcPesLcEJInGMgAVxfqyaxXzv4WdHk0NbXSlSvX2MR1UldXFw0MDJDX6xUmEuWE8mIisRjLzWaz3lFY5Kwsryh8zGQyfrGo0PWkRqO5q8uK3HHCGI1qmcGkt3LLcnJLwQQhGdQDBJmcnCSPxyMOFAoIgwPnW1s7xVSR9EowG9RUmm/O6AKAv8LmnroGODpi32A+uHyFQi1WmXcCqEREOQF2XBcCwuebQ1McySX8JwDP72DFKbSrxRCIFHr5N6NzdWhomAYHB6m/v58bTy+XRY84QKDx8XEKBjG7UzQCGRPIIpNJHCaznl/1dy1wAe44YVJAQYEoIATIkX74fD5RACknExgcGKWhwcyhjlaThgljmiULEOVWOTQWoFHv1Gw4PR8ez6TouV4tQL3YQRVKthDgoyAqmgjg9yXO4SfAv0JPtkY1V8cgXm/vsMjloCxQJn6/XygvCNTX1ycIhGNoaEj4Wqky+zCwqoSBjUbrgIJAYVAYCwHXDg2z8iSnmwIaNkcuNkUIpefoQhQMx6ily8O+y8Jkwb1GR70ibF0tYDhDwB+k6UUIC0yxn9U1PJUR8sNFQbht1M4NrkLdjwyP08RkIHkmEzBLIBDMNtQH5Qmf78PCqhEGQOUt1xrwPirXMzbBlTDnQOrVCnJadcKBTDdHyOq2dLKzmzbkYT4wkAotdqVO7O0Cjm76GJiFEGaz1No7FxEB7P6yD6NgwihYbeaagdfrWxHBQRQQ6MPEqhJmpfCO+8T00vR8ioYJg/EuadZIJOv6hn3UN+JnMqRVhCTzZ8AUdnEUg6kndxoYPYchDeNs9m7F3MNG+fkGPCFhljANBhBmiZ1fKAyiphQwLAMdprmArCAM/I1wKNNcoWCR+EoBSjThD4sOx/RQGuqj0ehY7tOvJWpsaBFLb6SbQdwDA8nhN6DCMdEM4TGWGgPB+vpG2G8YS/hAfA0ioXT5x32hhO1tvWLgdzokEiT0MgfPBcJxut7L0VwyjE5BqZCI35cCBq6vppN+J5EVhFGplCRn05MO31REZHNTJg0kgbo0tAxlREdyhZJ0BhOp1JpEE06ip2eIzp5poq6bUBq/mB90o7WbGphIp09fpnfeOUevHzpOL7/8Nr34s/+kX/7iXTr02nE68uYZqnvvEp0720yXG29Q241e9h1GhApihN3Vq53UxoRJn8FArHBSuYKkskzCoO+oqZM/F0yEx4KwrFDjvqjI/qaAwVjphM9m3PGn/NrXvua22+1PcuHkceuWwtlNVfpi0GrVooK7uweZDAn1QIFiOGZNmU10DyCje6y+h9p7vbOOJBJdBr2ZtDodybnCotEIm4y5ihwaGhOhL9ZuOXu2id55+xy99+5Fqr90na5d66TOzj6hKhh0NcKO8uiIV6jOza5BarneTVeutNO1Zg73u4domN+DKWpqauPPDAu1SUEqU/D3w3xK2fwwEXAwcA2cc6dZKTojoYZ9oyE63+qd7SIAKioLqba2gmy2pafG4Pdieq7JZILyxfk5ukZGhl95/fVX7lhv/HL40BUGhahUKqiiopBcrrkJgSBMLytKR59XDGWAutRfH8pomWjRGi1W4ZaTWq1l4qFzcq6VY72YUycb6aUX3xKvCF/RRwV1ADHhj8DkwHfC/Gy8ioPPw2FG+DwxEWDT1kPHjzXQG4dPCcVK97UkbIZkTBiQRcIVeovKsPN74cYEedmXgQOMXmsoTgro7igscpHFelfzb+8bWWGSgLLyAlFw6TmX8ckQtfeM0+BYgE439pGfzVQKqCD4LlAWfAKf0+kNpFTdunJ8ihzLKd1iwOdALNwDxyxgipgwIEniudHPxM+TZl6ght3DQbp6c5K8/gj1jARnx8UAWBi6pNjFrx8RZsVAYTscViouzmOVmOv/gZN7pX2UjxG63DYyT12YMKwuov+FP497gDw6nV68LgYQTSqTCSWSyTla4WsVClWy0nGvxP34f4kPLAGQRSZHqj9RjHgGPI9MhhEQc0DG92yLly7e8NKQNyIiqBTQj4RZmkjq5QKy5ilRYPkFTjZLczNIIQjtPV5640SH6A5IAZUCdVEqmVyicueg5vNwgBMtPoEUSUAMnc5AFoud7A43OZ0F5HIXkcOZT3qDhZRqKJSeFEpWLqWWycB+ByKfBQgkoqKkKUqHIA3Op0VMsGAYonn8iodVZi4aUirlVF6eTzZ7ZjY7m5FVtK6sLKLKKiwbNwek/ydZadKtCVRBr+dWydKfSQyMV5EzKYzCNGHIgEqlIYPRLEjhzCtgX8HBpsvIxNKIa3AvKA2iFEEs+CFJv0TOBFMyeZQqAxNIw0Rg5RAESZAC33VrRUPtWGXYCcbfKeD5pzhqSiXy8LGCAge53XbSqFfWq54NyCrCmEwGIdEGQ+ZayGlc4Ypgs8NkUSygLimoNVq+l41srCJ2p5tMZis7xZpbyIHKXrjCU0fSkU2aGQWTBgQS6iPUZeHvx2nh27C5Wgy4d1lZAXZA4e9Y+D7ZiKwiDMaOlJbm36IyKQj10OqFc4tKXKjCcA7vgTSInARJkv7JYhW8PNIJBP8n5dgudr/E9XImzPxkXgrw1UrL3GS25Iazm0JWEQZw59mporzwlsoVJGAnV8/mZWFTkImEafkgJFkYCeIkjqWQuIbJJfIzmekuNIx8NkcWJgvC6lxC1hFGq1OLEBu2PR0wI1pWF4VicVOQbcBzQmHSw2wARK6uLhbqkiu/JYWsIwwKE/mY6urMefTIoCZ6anOngJG/Ef9NZ/aaoyukoNDJjnvu7VuRdYQBkJco54gptTUeMDM9TZHwXN9SrgDPjWVhU0D6AKE0EnW5kntJR1Y+sUIhJ7vNfMuyYyj8XAciIne+XfSf5Zo5ArKW4unDCmaRgwV8iwVlgYzzb8vFnwJkLWFC4Qj50kbgoYRzZQhAJjKZAZPqn5xa9VkNq4WsJAx6g0PBcMaQTQ5S2ebnFmESoTUTJk1O4IKhIUQ/5KGW7xdZSRiMPsMYVwxPSEGEqCL/kjyRIwDR8V8KQmF8HynMHQWGVWKxwXSAMAmFyTHGABkKM8MKIxZvTJ7JLWSnSYoj55LZAucIk2NgrrA2Jv+RQJDVM2NcTQ4hSxUmduugaJikJZxeTNuwGOTksmA4pJJsRgVplOgaSF5wh6CUS8isk5HTJKc8s5wc/IpFEJeC8GPSIEb68ZFrOSUgKwkTDIXFgOt0oMgXUxh09uYxUXasNdOB+230CB/7N1lp+1oTlbs1Ys25DwqMUQdBakvUtHutjg5sNNCjm430KL+u53Mg0mJI9EZnvo9G8RFh7hAwBTXgnzexi1vpYj3OOFVgV9F9pXqqKdbTOn7FkqeP3G+nJ3Y6aHuNSSjO+02sQkHKXEras05Pj28xMWH0tL5UQ2uL1FTLr9UFatInFgZfALeSBUTB1JL5ZjcXkJWEwdr86cuxp7CYecGItpEJjqzCXAF8DdZkQY8w5v64LCravd4iFMdtw0LQyQ+tECatlDaWquljm4z8qiGDRiruK76DD8w5CoSmKRheSi1ufXBEgbkYKWUnYaAwgVujpMUAZcf0jRu9UzTqjZBvKjZ7+INxUamleRraUmVkP2fl2w/ADNWwemws1ZJRI6NQlEPi4DRNTsVnj+6RCLX2hcR7KwUURhAmByOl7DVJaVNHRYS05IAlzP+ZobPXvHT04hi9c2k043i3fpSONXqoZyScsWbucsC1k0y4C20BeqfJR0cbJzOPhkl674qPWvrCGaMCb8ECZAdhsBJFriHrCIPWF04m7uawdISUgo9b/LVuP1264bvlqG/zUVOHjwY9Cy/RsRD8bGpa+8NU3xmki+1Ttx4dU9Q5FKHwvKmw8yHUMY0zUMTgVJjiHxHmgwOdjtjCJj2sRoFjbO18gFyJ+UJx0Yh1OjUfWlIqlWLwOA65QkEK/jc6/EBEtOoVRSd8Da7DPWa4mDRaLen0+sSUXBSbRCYGkqvUieVVMYQB18+/t+CKUJg0xvAdxSpZq7S6xGoi6wiDyGF+yInyxsCq+cA1gcAkjXuG+V9h+uQndtHv/s4n6YkndpARCzPNBGnv3vX0iY/vIItZRaOjgzQ54RG+w/yKnQ+8Ox2PsmMaJIddR8888yh9/euf59ePUWmpg0qKbPRbv/UIfebTj1BRoZWiEaT7MV5nfn5lfueA4KJw7HMxeZd1hFkwacfFLcbnJv+VDkxxDQWnaGJ8nGw2DqnvK+PKZofXN0mjI6OkUcvIZNKRb3KSQlMBvjdWylyaLCmg8qfjMfKMebALG61fX0E6rYoVEEu0hsU5d76NKz8krkuNrBOCko5bFIYJw7/xI8LcAYAA8wtSmCQJzEDyRBI4n5q0NjnpozfeOEa9vQNMEqUYfLV7z/38vpIaGpqpu7tf3AMDyFfaxSDG4vK9seM+9svGenRYmdNsMTIxK4WSnD/bNLvXAK4Xz7kgtdMxI3ZyW2oFq2xF9hFm9n+ZSJikzIoAURRY7kNn5MqT0JnTDfT3f/cDsXN+7foqkSd58/Bxse4vWrRKpSatTi8qNeFXLA68L+YWSRViuMWZ0430/PM/ouvXO2nt2gqxANArvzwqiIQJ/iALrl0Uad8HkwQlhV+Va8g6wiwEVN5iFYzzOoNRTD+JROLUfLWdjrx5QpDkwoUr1NLSKZYE06i14hrMhFyu/aeAr8Q0ESkf2N4Y937zDRDwFF261EytrTcJG3qJFRxw3RLTX+afFytALONHZSNygjDAUhWByWoGg4ksVicTQsfmaUosAoSVpLjKyWC0kMlsExPbhFItcq9bAZVBL7mKoy0tTc9IBfmwbMjoKDbFSBBKrsC03OXnSs1H7tElhwizVCWnSIPVHDAt1mpziWmyNruLzFa7mFsNX+f9DY9IONyJudZqMU1WIQ5NgihQFsw9Er7LUrg9MmUrcocwKwAqFnOuQRys0qDlA6s8wM9J9P8kL7wNCNeJAVIieQjiYIkPcfDfOLcyZclFPbkVOUEYRCMfNKIodKip2DU3z2klAA1sBjmtyVeRTvUBiyrNXwG/sL7N7ZqwbEDWEUahkLFKZI7dxeafH2QSGwZVbaw0UFUh9jBKnlwJ+BnQW72tSksbSjnCeh+kEWTn50+fzIYbIystz8ERhFlHGKx353Raxb6IKSD9HwwFRMLsdkmDcTC15XqqLtZz5Weuj7sccCU6IPPMCtqxRkdrC9ncKW9PFQRhYnNL5ANwpDF3HPPIcw1ZRxg4pqWlbjG3Ol1lYlEsoT4h+o1WShosoIzBVPeVGsiix7IfErE72u0AI+lQwXkWBW2v0lGJUymGPawECXWJ8YHM9dwzY251eXnBLevg5AKyjjCA02WjbdtryWbDjjkJQNKDUwGaCmAHtuXHw+o1Mqot09PGCqMY4wvA8ZUvMZRyIShAGP4I/I0ih1IoTaEdTnTygkWA55uZibO6RMSzp4AGUVGBBSCdImuca8hKwmBu9Zo1JXT/1nWiNaaANXh9kxMUDi29zLqGfY2aYp3wW/KsWLQwQRIoDDZIXzH4Y0r+TCpSQua4Ik9F2yq1YvB3ugKmQ5CZj3gcK4ln9rqbLXq6f9vaxMpTi90gi5GVhAHsDjNtZ5XBWjHpBRvjFuvzeSkaQcvNVBkogUEro+oiHW2qMjJZMie8o8IVuGiFwJXCJCXvgRf4NBjLu7VCSy4mzWKDv+MwRfys6cCK3xs2VFIZm1zsTZmLyFrCIKcCsuzbd79YyzYFkAS9036/l/8RF9v+wrFF2FxZoKXNTJRdtWaxkVX6ev4AKnzZ/No84B5pnBPQKGW0sUxLD28w0KYyDZW7lGLaiV6N8b5YDyZG8RgWcpwzRVBN+C1b7q8hown9WQsTLduRtYRBgWJJjPXcInft3pRhmlARAf8kSaeDVM2h8oMbLPSpB5306Yfd9MgWG7lZWRAN3ZE6AcmSf6aA+xrYR8LMgV/bYaZn9lnpk9tMtJVNVZ5ZStNxJguTJgWQ3+Wy0N79mykvz8amMWuLfVlk/ZPD8X3wwc1UWVUkCj4F5DZiYR+tLVbShnIDO7YqYS7kXBmIahZqwTh1uy17satxG5gqEFOvllE5+zabylRUbJNmkAXfh41AH3hgA5UU5wmzlKvqAmQ9YVC47nwHPX5wd8bmDXBfhsb8dPxiF3kmEk7wchUB85K+3+JKAEd5+fqdETvFdQ5OUWPHBJN5zreCr1KztoSVsoJ0+swFp3MROaGNSOZVVRXTg3s3C18ghUhsmupbhulUYy95fcsn9QRh3mceZingOTqYLGeuj4uVvlNPgc9ZLEZWyE1kYJXJdbIAOUEYFLRarRJKM7/ypkJRevdCF124OiD2WFqKNFCL2830pvIwiwGbT/SPhenijQkxNypNXJLPrSQTO+257LekI2d+hZhNcMtY3wS8vjAdPtFOrTdv3fg8Hdg7GruhrRh8qcjDLPERKEpzl49aevyUvr8jANOEeeL3EnKGMBjpP+H1C99lPnDO6w/TkAd7RS9OGJG4u82WDoItZZIwPXd0MkyhBXa5hdphFieW91jGWuYMcoYwUSYCNv1Mbbg5H6gc+BLpDud8JHwYdmKT/14OMClwkpczSfP3dEwHBrRP+qaEQt4LyBnCxFlhsHcjZhUsBJzFnKalCcNmiQkwg/+YYKkj8ekk8O/kOXQyLhaip4DvW2zDdQBEwbbFHxHmLgMzFrEfdaKCFwCfxlZ/6RuLzwcqXyaZFt0K0Ug47YgIQmJeEfI7YvwKV7BCNrOkugDYLCuyhMKAKJMT2GL5I8LcVUA9liIMzk6FsJfj4hXjC4RocNhDY6ODfAzNHuOeEZqammDiYPf+5MF/Y4PTyQCmtC5+T3zfQv5LCsIksTLm4qS1hZBThIEPs5TCYE/IxVZEgO8zMOKn6zdHKBTCntSZRzyGnuWEyiSUJsYRToTa+/2JdWcWAfyX8BLvw2QF/EHxei8gJwgjfA2W9OgiYXUCbBrYMV7MJGH/yM5+L/UOrXzH3hjf61q3L5GMW4SoIGJ0STLAKV75oK9sR04QBvYfOZilqwUhLvsw83IhKUwFo+SZCC2Zp1kIk1OsNKwgC90VJAizScImoIsByoKVGj4izF0EQmqfL4AaSp65FXhrnAkRiiy8MoNRpySHRUta9cI7pC0EOLzlbi1pVLIFQ3FsJ+xnQi1HmESU9BFh7hqw0LOXHd75hT5/8pg/GKFxX2hBJxW77G9Z66LaSgepVjAoF2Qpdmpo6xozOUzYVe1WymDzco8P5ip5YhZz10IdEyt/L7/ESC4gJwgDc+Qd92UUOCpQqcqsSJgjOLYwP/OB6/IdBnpyXxVtr3VTgVNPVcUWKnEbmRyJZB7GAa8t0lOBXU33lRho3wYbVRfqhcIsBM9khIa881P/0sSqD2nA82MJtntBZXJEYdAtcCthNBotv879BCTkhj0BCnB4vRAwVqY4z0hP7q+ix3dX0MHd5bR7U6FI5iFH4zQp6ZHNdnpkk50e5gOk0S1iwuDsQmFGJjKHYSZ2oc0kDFRmgiM8zHjIdeQOYeblYEAUpSpzvjTeHhj1i03RF5N/9Bq77Xp6aGsxbVzjojybjis5MeZFr5GL0XpbKk1UlqddckoKQm0QJoOcfJPE1Nn5hGE/RhAm93MxOUEYrGc7PweDqaZYMQHzptPN0sBogAaZNEsl8HA9Dvg6CLcRAqFSJwIxQQR8S+qaxTA8HqZBT5jD+OQJBtMlSZjMz+G5/cjFfESYuwMsHoj1WWb5whUiw2I//AqVSTdLiKiud3po1Lv01Fq8NxkIU1f/hDAvcC/G2CfpHmYHdZlVMaNMxt7RoBgHkw5BstmVHOZIg+8KY8WpJZ5nJViOxHcDq0YY/DC5HArwwcewosMRUUYKuBt2uIdziZUa0s0SKr6pbZgu8xFg53fBOuJzfn6vo9dLja3Ds1EVwmQMhBpl4izmoGLMC8jS0hugMV+6/wKyJJcs4wdM/814hvkLPd4uMJ5ZxU6+Wv3hTq+944RhBw+lH+UCm8GPs1gs4kemV+rtAIWMwsa6vakCR2WkFvABIcWqUmkVhARd3cVuMQpv1DtF4VRuBhUXi4vQ+1rHKF/Tw5HOnHIhs9s+MEXnro/TgAdJvtRSqolhDL5gTCjQ2eteMX439TkAzi7UJfkvnEj+nXB6kUd6vz4Myk6n05HL5SK73S7Iw/TEt0cVimXk8A7j/dXiEvj85z9vsFptW9iWl3IlKhkSEAYViighwaeVA31IPT2DdOrU5dkCx73EGrlMFBQe/JlImP2J+JwKTaIroG+CfQ2uqKRaQHH6Oew+19RPb5+7STcHJm7pSsC/B9g38fqifG+sv0sUZOWBmmBk3cmrHrrRF2BfJ/13sPeCBYfkCX9KkAyraibnJeGcVqOm2vUVYurMSoHPYc1hk8lEBQUFZDab8XvZss2EgqGwt7O99+xo98A7r7/1eiD5kVXHHSeMXl843dfnjbndVrNGo3bzD1RyC5FATvHjQZrbCS+x4GB7ey811LfMki1BGB0TBosqzzma0ShMyVxFYiQ/8jJNbSN0oXlQEOX05T72ccbECL3FzA5IMzoZpes9frrCJGlom6DzrV4xDHOMiTR/OAPIgpWoYI5ShBHLsKZNZJPLZWISW/pe3EsBv0vDjcLhcFB+fr74m+8d53t7A4FQ47VrnXUv/PiN14e8/taLF+uW6mS7o7jjhDl7ti4skVgGm5u7AkVFeRaTyZDHhSXjApCw+RBqA8KsZHFlAAmvlpYuam7umK1gyL9Wq2eHN6FcKFw5R0uoIIxrSScNPoKIKcjhbyAUpRBHQfBDlvtqvI/rgqwkU5G4SP/DZM3/HMyQfN6CiLgmsSZMWsPg97ZsqRFzlFLXLQaYoJSq2Gw2YXYZ/NPiI5Ne/9E3j5z6cW9v948mfJHr//iPfzpvn6DVxR0nDNDaejFomMnvv9rSOalQyqfz8hyYHmLgglJAbZKtZUVqMznBrfxKu1CZFMGgKDqDYdYEAHgVmV/+D6YJFbYcMH0F69BgKgirIfsJGvEd6aZtcYCoMEMgy3zHnoklhknM3QeLB9XUlIhJ+IvNIMA90KDgp7jdbuG3cHlxEcWjU1Ph0ba27qP//qPXfjoyNvjes8/+rufxx3fdNWVJYVUIA3T2Xw4WlazrnJ6OnG1u6hi22Cxqg0HrYrVRcMHARMHBSVbQ4t3/WAmzsaGFenuH5gjDBW4wWLiy5lo1XnEolSrhECfM0xxpcBlmDeAVt4GJKC0toM9+7pP0hd/+dTr4xIO0e/dm0bp7egZEOh/1inHACz1aavXMxIKI6WRJAGqXvnID7ltS5mbH1YrGkzw7B6ikgRsBiAIzBOIw4tPx6XHvhP9K3btnj33vu6+8PDk1duIf/uHPfM8999zCBbbKWDXCAKw00ePH35o0WSq6L1y4Mjkdm5a68+1StVol1CZlolBYMFELOcRjY166dPEaDQ97ZitOzoTQG0xCadIrS/zNB14xKCoWm6uwxK5qanKZVcKJRQSUqCQdTbGfNDLiFc51e1sX9fUNQ6eoyK6mEqd6dgjDXA0hSlMsoCxzALmxV0EKUJWSkjyxLgyULQV8Hg0HqpKXl8eKZ0RD4KKYjodC0YGOjt63Dr927EfDo2M/vdnd0fLCC8/Dwf1QyAKsKmFSaG4+EyopqeohieJCe2vPoDPPrmLnL49bmhqVlnKIQRgQJx2esQlWmFYaHfXOEga7k+j0JtFq5wMVAOczFMIwy7nEGtSl0q2lXeuMZNLJaTwQpQkOr/v6hujqlRt0ufE6NfNrf9+gWKZjTYGG9tSayaKXcygd5pA6Xa2QZVYKv2VxgDBzeZoUYYrF/OrEwgJ4Vr1eL4gCwmi16BtLOLajw+NXTxy/WPfaoWM/HxrpPfaXf/nscHPz+cyOqw8Bd4UwQEtLfeT48TfHC4yl3Zebb06yLdeZzUYXtzaQRgLzAuIA6Q7x8PA4XTjfLBZUBhItMrEEPMi2GLAJBQiTug8cZvyFBYaw4kOBTSUWPIyx6eEYlV9DpJJFqcgqp61VBtpQphe915c7AtQ7Gs6IjMSS8lCYRb4fzwjCxNMIg3MOp4XKKwrFylMge0pV4OCiwTDgr/T29g6/dfJU/Q97entfuX792vXvfvfbE+ImWYC7RpgU6pvPBPWGsn5uzRMcvsodDouMnU0s9qZk0gi/BuSBX4NjoH+ETp1qnN1wC60b0ZGGo6SlCIM6i2A2QNKBRXUjdzLG4TKWLSt1acSaMjBTNUU6uq9ER+uKdVSZr6V8q0r0KZ29PkktfcEMdeE7C7LI5EtnsOdMUoJouFZv0NLataXsZJuErwLCQGGYPDNM6JlgMNjFDv6R116r+1lz89Vjf/EXzw40NZ3LqqmTd50wQEfHxbArr3aQKHS55+Zwr1qjlHP4bWeiaFm64dyIFodC7+zso2N1lwR5APQsQ2GwYPNShEELRlibWKkq4RshxPaHmISeiFCN0ckEmRJryUg4fJ4W/UMNHX663Bmgm0MhQZaUKQQkHBlhUWf0SC9LGDi9yQ/jWsyz3r17C61ZUyEy4ElFRSJutOtmf8vb75x75403Tv7yxo3eC9///v/GuvdZhw+FMABIc/r0OyMGY1lX87WuCY4clWazAb4NQm81VAY90ejlbbneSePjifKTssKo1FrSYNubJU2ChKMYhSALnN+UacIL+oyQgMNYFmR1QYz2QT76g9TBrz0jIVai2C0JOpBEhlXFRc5lcbICCYVhQvL3w3/BQkIHHt1NO3duIqfTPoPfB0xNBW82NbW+2dzc8e/Xr3f+56VLp64dOvSvWWOC5uNDI0wK7BAHNZq8ofFx37VgINSv0+tm9HqthQtZDxPFykM2u0X4NYODo6LCYY6Q5V2qheM9KBASesD8hB6ASWjYQnhiCmNbYmKXWJithbp8UjuWIDpajKgZ4OdEWK9UymjDhmr6jd94lB5+eCe5810Iq8GnMY6A2k+erH+r8WLzi/WNHaf+5m+e7eroaM4qEzQfHzphgO7uplB9/bFBm33dje6OPu+MZFqh1+sM7NvIOARXFRflSQqL8rjwFWJ87PQ0E2EZHyKBBGmgVIhooBcgTUptVoJERJTaX2CFZGHg0UxmnVij78knH6JdbIocTiueJx6JxDquXW0/2tbe8x/nTtYfPX666eqLL37bm/xoViMrCJNCY2NdSKu3DvT2etrZ+PQwYeIGg84sV8gNTqdNUl1dRi4Xemvl5PH4uPKXr3ihNOzPIBRHJhhmCiYC7Env68kEiJbYXAtEkeIQCbqVkQVJQYTQn/zkXvr4x/cJhdHqNHjeuMcz0Xb2dOOvzl24+h+nT1+re/7/faMD5jn50axHVhEGaGtrCl+6dGygoKCypaWlf8xhM6v1Bl2eUinXsamSIDub57YLpeDCFxnZlQCVDVWCo6lgpxkZYZgrhSLxytIhrgEx4KNIZYkdS2CKoFLLq1kC6CvC0qoHDuygxx/fRQUFTv68JB6Nxjzt7T3d5882HXnt9bqXL1w43/DSS3+38ll1WYKsI0wK587VhV2uksHGyze9Go1CpVWrLTq9hsVCqrLZTBK0YKTYsZkWOihXamZQ8amhnWqO5rHpFqIuiBW2G4bpSt/WZqVEgaoUFjrF4odPPLGL9uzZJMjDKhblZ7zZ0db9zqX6a6+8+NIbRyYnJy6/+eb3p5IfzSlkLWEAZDY1GuNIff3NAa1GPWoy66fZ2TWx2mihNpWVBaLDEMMfEU1heOZKkSJDSj2gVBhvkyDIykiSAsa41NSUsqpsp1//9f0cNheDQDFWFW9//0hPQ8P1wz/80aGf9fT0v/7CC//nJrpMkh/NOWQ1YYCenpYI2/iewqKahvr6jhGtVqnQalV2jUYt5ShKUVzskhQUYO07qUjuTU0tPs5lMUCdEvtIr5xwAHwhu91EmzevoU99ar8wQ+j95vtF+H69TJbjp041HPrHf/jZYb1x7NL3vvf80mve5wCynjApnD9fF7HbS/vOnLgyJFPIR+1WU0Sn15q40rRWq0laXV0kVgwHYdCNcDvDId8PYZDer6oqov3772dVeYhqayuFieTwPzQ+Ptlx9WrHqy+9dOSHXm/7r0rKjD3PP/98zqpKOnKGMACkvLXtfE9e3tqLl+tbBgqK8uRskvLZROk55Jaw2ogEGZTG6/WLscArwe0SxmjU0saNa0QU9PjjD4ghC2zKIqFQ2NffN9J16mTDoe999xc/z8ufvvTcc8+F6+rqbk/yshg5RZgUMCTx/m01fcePt41z2K1mf8bJJkrOZklusxk5ksoTJgpzmbBywvyE3XyslDAwQVgCHo7tU089zKaIw2X2X9gEhpik3RwFnXr5paNHfvzCa6+bLO7Gf/qn5z703uU7jZwkDHDu3Ln4hg2lQ4d/1eiJTU9P5blsca48HRNFyySSwiG2281iTDCIg8Hki2ElhIEJKilxs6o8SE8+uZdKS/NhgqLsLAfHxyc6z527+sq//dvLPzKaAq9WVFj7mCz3hAmaj5wlDNDY2BgrKXuyT6n0nDt65FyXVq+bYbKwQ6zUsImS5ec7JFVVhUIFMJ4moTa3WoelCINwGcMqt2ypps997iDt3r1JDOnkz4QYXT09g6dff+3EkX/73q9elcuNUJUQm6CVO1A5hpwmDNDVVTeNnE1VdV7vG280DIeD0ZDNbp4xmQw6rmyhNjBRDodZzA1aSG0WIwxUpawsn53afRwFPUSVlUXocY6yYxseHvY0nzze8MpLP3/7B/Hp6KGODkn/4cP3pqqkI+cJk0Jzc3P8i1/81NDQ8MSFxsbOTp1GPW0yG+2sNDp2iqVut419Gzc7p0QjI+MUicw5xPMJg1wMkm5bt66lZ545SDt3rmeVwQg/aZjJ1t3a2n3+5z9/6/WXf3H0tcpKxZXnnvtGEMQVH77Hcc8QBoApgNps3Vrd/+aRKyOSmZmo3WGWcOWruLJ1ZrOBI6k8sTnn0JCHgsHEiLx0wsCxhck5ePABevrpAyJ0ZpMGOxYNh6NXzp1p+sWZsw3f8/s9Rycn5f33omO7FO4pwqSQcIiLR2ZIfmlwcLJVKZdHrDazQy6XWrjyJYWFDpHGD4WiQm1gopDp5fcpP99On/70o/Sxj+3EVsEz7NhO8/uxsTFv09tvnf3Fe8fOvxKLDTQ/99yf+pqb6xb3ku9R3JOEAWCiTpx4O1hRsbe/+fKVoWgsLrNYTQ72S8xsouDTiLwNuhagNhLJDDu0G+kzn3mUtm1bBxM0I5VK2F+Jd58503jply8ffe3MuUuHAoHptueff+6uTh7LJtxep0mO4umnv6WMBSdqt+xY++Rjj+16ZOPG6jJ2iF1simQ+X1DS3T0o5j9VVhYiFIeqzExPxyMjI97Gd46eOdzV0/dmZ2d31+Rk2/hLL730X8oEzcc9qzDpgOlwuavH4/Hpa2NjE81MEj8TQ87mSaZSKfT8twQ71ZvN+hm5TIbcSvelC82XX3n13VebrrT8KhTqvvYv//K3E1Ct5C3/y+K/BGGArq7GWGPjcd++fVt7B28OXZOplM3sxIbsdouRTY+VFYd9ZAp5J3yX6uouvtzW0vXDy1daT/b1eXt/8pP/mzMDnFYXRP8fel5uAp8hSBcAAAAASUVORK5CYII='''

imagePath1 = PhotoImage(data=dats)
widgetf1 = Label(top,  image=imagePath1,  bg="#006666")
widgetf1.place(x=225, y=290)

dats2=''''''

imagePath2 = PhotoImage(data=dats2)
widgetf2 = Label(top,  image=imagePath2,  bg="#006666")
widgetf2.place(x=225, y=435)



on=Label(top, text="",bg="#006666",fg='white',font=("Comic Sans MS",15))
on.place(x=100,y=18)#594x515

txt=Text(top, width=31, height=7, wrap=WORD,bg="#f2f2f2",font=("Comic Sans MS",18))
txt.place(x=60,y=50)

speak = wincl.Dispatch("SAPI.SpVoice")

def is_connected1(event):
    try:
        socket.create_connection(("www.google.com", 80))
        on.config(text="Online")
        widgetf5.place(x=1000,y=1000)
        return 1
    except OSError:
        on.config(text="Offline")
        widgetf5.place(x=560,y=480)
        return 0

def is_connected():
    try:
        socket.create_connection(("www.google.com", 80))
        on.config(text="Online")
        widgetf5.place(x=1000,y=1000)
        return 1
    except OSError:
        on.config(text="Offline")
        widgetf5.place(x=560,y=480)
        return 0

is_connected()

# tt3 =threading.Event()
# while 1:
#     t3=threading.Thread(target=is_connected)
#     t3.start()

def speakITheart():
    say.config(state="disabled")
    reset.config(state='disabled')
    speed.config(state="disabled")
    listen.config(state='disabled')

    t=threading.Event()
    global speak
    global count

    t.set()
    data=txt.get("1.0","end") 
    if data=="\n":
        data="What should i speak?"
    else:
        pass
    try:
        speak.Rate = rate
        s=speak.Speak(data)
        txt.yview_pickplace("end")
        if s==1:
            say.config(state="normal")
            reset.config(state='normal')
            speed.config(state="normal")
            listen.config(state='normal')

            count=1
    except Exception as err:
        print("Done")
    
def paus():
    resume.config(state="normal")
    pause.config(state="disabled")
    reset.config(state='disabled')
    global speak
    try:
        speak.Pause()
    except Exception as err:
        print("excepted at paus",err)

def res():
    global speak
    try:
        speak.Resume()
    except Exception as err:
        print("excepted at res",err)
    pause.config(state="normal")
    resume.config(state="disabled")

def newthread():
    t1=threading.Thread(target=speakITheart)
    t1.start()

def disable_event():
    speak.Pause()
    top.destroy()

def sav():
    desktop = os.path.expanduser("~\Desktop")
    os.chdir(desktop)

    dirname=(desktop+"\\Speak-It")
    if not os.path.exists(dirname):
        os.makedirs(dirname,exist_ok=True)
        os.chdir(dirname)
    else:
        os.chdir(dirname)
    
    currentDT = datetime.datetime.now()
    form=(currentDT.strftime("%a%b%S"))
    data=txt.get("1.0","end")
    text=data
    engine = CreateObject("SAPI.SpVoice")
    stream = CreateObject("SAPI.SpFileStream")
    stream.Open(form+'.mp3', SpeechLib.SSFMCreateForWrite)
    engine.AudioOutputStream = stream
    engine.speak(text)
    stream.Close()

def rest():
    data=""
    t=threading.Event()
    t.set()
    speak = wincl.Dispatch("SAPI.SpVoice")
    txt.delete("1.0","end")
    say.config(state='normal')
    resume.config(state='disabled')
    pause.config(state='normal')

def sped():
    global value
    global rate
    global master
    master = Toplevel()
    w = Scale(master, from_=-10, to=10, orient=HORIZONTAL,length=150)
    w.place(x=20,y=20)

    def setspeed():
        global rate
        rate=w.get()        
        master.destroy()

    okay=Button(master,text="Set Speed",command=setspeed,width=15,bd=0,font=("Comic Sans MS",))
    okay.place(x=20,y=80)

    master.configure(background="#006666")
    master.resizable(False,  False)
    master.geometry("200x150")
    master.update()
    master.mainloop()

def sr(res,listen):
    txt.insert("end","\n"+res)
    txt.yview_pickplace("end")

def reco():
    tt=threading.Event()
    tt.set()
    listen=winspeech.listen_for_anything(sr)

def reco2():
    tt=threading.Event()
    tt.set()
    r = srr.Recognizer()
    while 1:
        with srr.Microphone() as source:
            audio = r.listen(source)
            try:
                text = r.recognize_google(audio)
                if top.sresults==0:
                    break
                txt.insert("end","\n"+text)
            except:
                pass

def stops():
    winspeech.stop_listening()
    txt.insert("end","\n-------------Stopped Listening-------------")
    txt.yview_pickplace("end")
    stop.place(x=600,y=600)
    say.config(state="normal")
    pause.config(state="normal")
    reset.config(state="normal")
    speed.config(state="normal")
    save.config(state="normal")
    top.sresults=0

def newthread2():
    say.config(state="disabled")
    pause.config(state="disabled")
    reset.config(state="disabled")
    speed.config(state="disabled")
    save.config(state="disabled")
    stop.place(x=374,y=455)
    txt.insert(("end"),"\n------------------Listening------------------")
    txt.yview_pickplace("end")

    if is_connected()==1:
        ecognizer=reco2
        print(is_connected())
    else:
        ecognizer=reco
        print(is_connected())


    tt1=threading.Thread(target=ecognizer)
    tt1.start()

def exi():
    top.destroy()


top.protocol("WM_DELETE_WINDOW", disable_event)




say= Button(top,text="Speak",command=newthread,bd=0,font=("Comic Sans MS",),width=15)
say.place(x=60,y=305)

pause=Button(top,text="Pause",command=paus,bd=0,font=("Comic Sans MS",),width=15)
pause.place(x=60,y=355)

resume=Button(top,text="Resume",command=res,bd=0,font=("Comic Sans MS",),width=15)
resume.place(x=60,y=405)
resume.config(state="disabled")

save= Button(top,text="Save",command=sav ,bd=0,font=("Comic Sans MS",),width=15)
save.place(x=374,y=305)

reset= Button(top,text="Reset",command=rest ,bd=0,font=("Comic Sans MS",),width=15)
reset.place(x=374,y=355)

speed= Button(top,text="Speed",command=sped,bd=0,font=("Comic Sans MS",),width=15)
speed.place(x=374,y=405)

listen= Button(top,text="Listen(β)",command=newthread2,bd=0,font=("Comic Sans MS",),width=15)
listen.place(x=374,y=455)

stop= Button(top,text="Stop(β)",command=stops,bd=0,font=("Comic Sans MS",),width=15)


exit=Button(top,text="Exit",command=exi ,bd=0,font=("Comic Sans MS",),width=15)
exit.place(x=60,y=455)

top.bind('<Motion>', is_connected1)

top.configure(background="#006666")
top.resizable(False,  False)
top.geometry("594x515")
top.update()
top.mainloop()


